[tool.poetry]
name = "shido"
version = "0.1.0"
description = ""
authors = ["Phawit Pornwattanakul <me@helloyeew.dev>"]
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.11"
django = "^5.0.1"
python-decouple = "^3.8"
django-admin-interface = "^0.28.1"
django-crispy-forms = "^2.1"
crispy-bootstrap5 = "^2023.10"
gunicorn = "^21.2.0"
djangorestframework = "^3.14.0"
psycopg2-binary = "^2.9.9"
sentry-sdk = {extras = ["django"], version = "^1.40.0"}
markdown = "^3.5.2"
drf-yasg = "^1.21.6"
django-cors-headers = "^4.3.1"
coverage = "^7.4.4"


[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"


[tool.coverage.run]
branch = true

# omit uninteresting files
omit = [
    "*/migrations/*",
    "*/models.py",
    "shido/*",
    "*/templatetags/*",
    "*/management/commands/*",
    "*/__init__.py",
]

[tool.coverage.report]
# Regexes for lines to exclude from consideration
exclude_also = [
    # Don't complain about missing debug-only code:
    "def __repr__",
    "if self\\.debug",

    # Don't complain if tests don't hit defensive assertion code:
    "raise AssertionError",
    "raise NotImplementedError",

    # Don't complain if non-runnable code isn't run:
    "if 0:",
    "if __name__ == .__main__.:",

    # Don't complain about abstract methods, they aren't run:
    "@(abc\\.)?abstractmethod",

    # Default coverage.py one line ignored
    "pragma: no cover",

    # Some strings translation in Django model
    "def __str__(self)",

    # Except exceptions
    "except Exception as e:"
]

ignore_errors = true

[tool.coverage.html]
directory = "coverage_html_report"